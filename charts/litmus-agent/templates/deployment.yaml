---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: subscriber
  labels:
    app: subscriber
    app.kubernetes.io/name: subscriber
    {{- include "litmus-agent.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: subscriber
      app.kubernetes.io/name: subscriber
      {{- include "litmus-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: subscriber
        app.kubernetes.io/name: subscriber
        {{- include "litmus-agent.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: litmus
      containers:
        - name: subscriber
          image: {{ .Values.image.subscriber.repository }}:{{ .Values.image.subscriber.tag | default .Chart.AppVersion }}
          imagePullPolicy: Always
          envFrom:
           - configMapRef:
               name: agent-config
           - secretRef:
               name: litmus-agent-secret
          env:
            - name: AGENT_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              cpu: "100m"
              memory: "64Mi"
            limits:
              cpu: "100m"
              memory: "64Mi"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: chaos-exporter
  labels:
    app: chaos-exporter
    app.kubernetes.io/name: chaos-exporter
    {{- include "litmus-agent.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chaos-exporter
      app.kubernetes.io/name: chaos-exporter
      {{- include "litmus-agent.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: chaos-exporter
        app.kubernetes.io/name: chaos-exporter
        {{- include "litmus-agent.labels" . | nindent 8 }}
    spec:
      serviceAccountName: litmus-cluster-scope
      containers:
        - image: "{{ .Values.image.chaosExporter.repository }}:{{ .Values.image.chaosExporter.tag | default .Chart.AppVersion }}"
          imagePullPolicy: Always
          name: chaos-exporter
          ports:
            - containerPort: 8080
              name: tcp
          env:
            - name: TSDB_SCRAPE_INTERVAL
              value: '10'
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "100m"
              memory: "256Mi"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: event-tracker
  labels:
    app: event-tracker
    app.kubernetes.io/name: event-tracker
    {{- include "litmus-agent.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: event-tracker
      app.kubernetes.io/name: event-tracker
      {{- include "litmus-agent.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: event-tracker
        app.kubernetes.io/name: event-tracker
        {{- include "litmus-agent.labels" . | nindent 8 }}
    spec:
      serviceAccountName: event-tracker-sa
      containers:
        - image: "{{ .Values.image.eventTracker.repository }}:{{ .Values.image.eventTracker.tag | default .Chart.AppVersion }}"
          imagePullPolicy: Always
          name: litmus-event-tracker
          envFrom:
            - configMapRef:
                name: agent-config
            - secretRef:
                name: litmus-agent-secret
          env:
            - name: AGENT_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              cpu: "100m"
              memory: "64Mi"
            limits:
              cpu: "100m"
              memory: "64Mi"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: chaos-operator-ce
  labels:
    app.kubernetes.io/name: chaos-operator-ce
    app.kubernetes.io/component: operator
    {{- include "litmus-agent.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: chaos-operator
      app.kubernetes.io/name: chaos-operator-ce
      app.kubernetes.io/component: operator
      {{- include "litmus-agent.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        name: chaos-operator
        app.kubernetes.io/name: chaos-operator-ce
        app.kubernetes.io/component: operator
        {{- include "litmus-agent.labels" . | nindent 8 }}
    spec:
      serviceAccountName: litmus-cluster-scope
      containers:
        - name: chaos-operator
          image: "{{ .Values.image.chaosOperator.repository }}:{{ .Values.image.chaosOperator.tag | default .Chart.AppVersion }}"
          command:
            - chaos-operator
          imagePullPolicy: Always
          env:
            - name: CHAOS_RUNNER_IMAGE
              value: "{{ .Values.image.chaosRunner.repository }}:{{ .Values.image.chaosRunner.tag | default .Chart.AppVersion }}"
            - name: WATCH_NAMESPACE
              value: ''
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: 'chaos-operator'
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              cpu: "100m"
              memory: "64Mi"
            limits:
              cpu: "100m"
              memory: "128Mi"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: workflow-controller
  labels:
    app: workflow-controller
    app.kubernetes.io/name: workflow-controller
    {{- include "litmus-agent.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: workflow-controller
      app.kubernetes.io/name: workflow-controller
      {{- include "litmus-agent.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: workflow-controller
        app.kubernetes.io/name: workflow-controller
        {{- include "litmus-agent.labels" . | nindent 8 }}
    spec:
      serviceAccountName: argo
      containers:
        - name: workflow-controller
          image: "{{ .Values.image.workflowController.repository }}:{{ .Values.image.workflowController.tag | default .Chart.AppVersion }}"
          command: ["workflow-controller"]
          args: ["--configmap","workflow-controller-configmap","--executor-image","{{ .Values.image.argoExecutor.repository }}:{{ .Values.image.argoExecutor.tag | default .Chart.AppVersion }}","--container-runtime-executor","k8sapi"]
          resources:
            requests:
              cpu: "100m"
              memory: "64Mi"
            limits:
              cpu: "100m"
              memory: "64Mi"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
